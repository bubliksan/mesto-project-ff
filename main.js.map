{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/api_config.js","webpack://mesto-project-ff/./src/scripts/validation_options.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const apiConfig = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-29',\r\n    headers: {\r\n        authorization: '16401e6c-35b8-4783-8b7e-d7c1e645cdd4',\r\n        'Content-Type': 'application/json' \r\n    },\r\n    id: 'dc464caf488af377d2058b30'\r\n}","export const validationOptions = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'form__input_error_visible'\r\n}","// Функция создания карточки\r\n\r\nexport function createCard(card, cardFunc, config) {\r\n  const placeTemplate = document.querySelector('#card-template').content; // Берём содержимое шаблона\r\n  const placeElement = placeTemplate.querySelector('.places__item').cloneNode(true); //клонируем\r\n  const cardImage = placeElement.querySelector('.card__image');\r\n  const deleteCardButton = placeElement.querySelector('.card__delete-button');\r\n  cardImage.src = card.link; // Наполняем\r\n  cardImage.alt = card.name;\r\n  placeElement.querySelector('.card__like-count').textContent = card.likes.length;\r\n  placeElement.querySelector('.card__title').textContent = card.name;\r\n  if(checkExistLike(card, config)) {\r\n    placeElement.querySelector('.card__like-button').classList.add('card__like-button_is-active');\r\n  }\r\n  if (card.owner._id === config.id) {\r\n    deleteCardButton.classList.remove('card__delete-button-hidden');\r\n    deleteCardButton.addEventListener('click', (evt) => cardFunc.delete(card._id, evt)); //Обработчик из функции удаления\r\n  }\r\n  placeElement.querySelector('.card__like-button').addEventListener('click', (evt) => cardFunc.like(card._id, evt));\r\n  cardImage.addEventListener('click', cardFunc.popup);\r\n  return(placeElement);\r\n}\r\n\r\n// Функция проверки своего лайка в карточке, полученной с сервера\r\n\r\nfunction checkExistLike(card, config) {\r\n  let result = false\r\n  card.likes.forEach((item) => {\r\n    if(item._id === config.id) {\r\n      result = true;      \r\n    }\r\n  })\r\n  return result;\r\n}\r\n\r\n// Функция проверки своего лайка в карточке\r\n\r\nexport function checkLike(evt) {\r\n  let result = false;\r\n  if (evt.target.classList.contains('card__like-button_is-active')) {\r\n    result = true;\r\n  }\r\n  return result;\r\n}\r\n\r\n// Функция лайка в карточке\r\n\r\nexport function likeCard(likesNumber, evt) {\r\n  const likeButton = evt.target;\r\n  likeButton.nextElementSibling.textContent = likesNumber;\r\n  likeButton.classList.toggle('card__like-button_is-active');\r\n}\r\n\r\n// Функция удаления карточки\r\n\r\nexport function deletePlace(evt) {\r\n  const deleteButton = evt.target;\r\n  const place = deleteButton.closest('.places__item');\r\n  place.remove();\r\n}","// Функция закрытия попапа\r\n\r\nexport function hidePopup(itemPopup) {\r\n  itemPopup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', pushButtonListener);\r\n}\r\n  \r\n// Функция открытия попапа\r\n  \r\nexport function showPopup(popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', pushButtonListener);\r\n}\r\n\r\n// Функция слушателя нажатия клавиши для попапа\r\n\r\nexport function pushButtonListener(evt) {\r\n  if (evt.key == 'Escape') {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    hidePopup(openedPopup);\r\n  }\r\n}","// Выбираем все формы и для каждой вызываем утановку слушателя\r\n\r\nexport function enableValidation(validationOptions) {\r\n    const formList = Array.from(document.querySelectorAll(validationOptions.formSelector));\r\n      formList.forEach((formElement) => {\r\n      setEventListeners(formElement, validationOptions);\r\n    });\r\n}\r\n\r\n// Очитска валидации и установка кнопки в неактивное состояние\r\n\r\nexport function clearValidation(formElement, validationOptions) {    \r\n    const formElements = getFormElements(formElement, validationOptions);\r\n    formElements.list.forEach((inputElement) => {\r\n        hideInputError(inputElement, formElement, validationOptions);\r\n    })\r\n    toggleButtonState(formElements, true, validationOptions);\r\n}\r\n\r\n// Переключение состояния кнопки\r\n\r\nfunction toggleButtonState(element, result, validationOptions){\r\n    if (result) {\r\n        element.button.disabled = true;\r\n        element.button.classList.add(validationOptions.inactiveButtonClass);\r\n    } else {\r\n        element.button.disabled = false;\r\n        element.button.classList.remove(validationOptions.inactiveButtonClass);\r\n    }\r\n}\r\n\r\n// Функция возвращает массив с элементами формы\r\n\r\nfunction getFormElements(formElement, validationOptions) {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationOptions.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationOptions.submitButtonSelector);\r\n    return {list: inputList, button: buttonElement};\r\n}\r\n\r\n// Для каждого input в форме вешаем слушатель, отключаем кнопку\r\n\r\nfunction setEventListeners(formElement, validationOptions) {\r\n    const formElements = getFormElements(formElement, validationOptions);\r\n    formElements.list.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n        isValid(formElement, inputElement, validationOptions);\r\n        toggleButtonState(formElements, hasInvalidInput(formElements.list), validationOptions);\r\n      });\r\n    });\r\n}\r\n\r\n// Функция валидации элемента\r\n\r\nfunction isValid(formElement, inputElement, validationOptions) {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n        inputElement.setCustomValidity('');\r\n    }\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(inputElement, formElement, inputElement.validationMessage, validationOptions);\r\n    } else {\r\n        hideInputError(inputElement, formElement, validationOptions);\r\n    }\r\n}\r\n\r\n// Отображение ошибки валидации и изменение внешнего вида\r\n\r\nfunction showInputError(inputElement, formElement, errorMessage, validationOptions) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}_error`);\r\n    inputElement.classList.add(validationOptions.inputErrorClass);\r\n    errorElement.classList.add(validationOptions.errorClass);\r\n    errorElement.textContent = errorMessage;    \r\n}\r\n\r\n// Скрытие ошибки валидации и отображение внешнего вида\r\n\r\nfunction hideInputError(inputElement, formElement, validationOptions) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}_error`);\r\n    inputElement.classList.remove(validationOptions.inputErrorClass);\r\n    errorElement.classList.remove(validationOptions.errorClass);\r\n    errorElement.textContent = '';\r\n}\r\n\r\n// Проверка валидации полей для сосотояния кнопки\r\n\r\nfunction hasInvalidInput(inputList) {\r\n    return inputList.some((inputElement) => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n}","const handleResponse = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n   return Promise.reject(`Ошибка!: ${res.status}`); \r\n}\r\n\r\n// Запрос к серверу на загрузку данных профиля\r\n\r\nexport function getProfile(config) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        headers: {\r\n            authorization: config.headers.authorization\r\n        }\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на обновление данных профиля \r\n\r\nexport function editProfile(namePr, descriptionPr, config) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: `${namePr.value}`,\r\n            about: `${descriptionPr.value}`\r\n        })\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на загрузку карточек\r\n\r\nexport function getCards(config) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        headers: {\r\n            authorization: config.headers.authorization\r\n        }\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на добавление карточки\r\n\r\nexport function sendCard(newCard, config) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: `${newCard.name}`,\r\n            link: `${newCard.link}`\r\n        })\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на удаление карточки\r\n\r\nexport function deleteCard(cardId, config) {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',        \r\n        headers: config.headers,\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на установку лайка\r\n\r\nexport function sendLike(cardId, config) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',        \r\n        headers: config.headers,\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на снятие лайка\r\n\r\nexport function removeLike(cardId, config) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',        \r\n        headers: config.headers,\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на изменение аватара\r\n\r\nexport function editAvatar(link, config) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: `${link}`\r\n        })\r\n    })\r\n    .then(handleResponse)\r\n}","// @todo: Темплейт карточки\r\n\r\n// @todo: DOM узлы\r\n\r\n// @todo: Функция создания карточки\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// @todo: Вывести карточки на страницу\r\n\r\nimport './index.css';\r\nimport { apiConfig } from './scripts/api_config.js';\r\nimport { validationOptions } from './scripts/validation_options.js';\r\nimport { createCard, likeCard, deletePlace, checkLike } from './components/card.js';\r\nimport { hidePopup, showPopup } from './components/modal.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\nimport { getProfile,\r\n  editProfile,\r\n  getCards,\r\n  sendCard,\r\n  deleteCard,\r\n  sendLike,\r\n  removeLike,\r\n  editAvatar } from './components/api.js';\r\nconst editProfileButton = document.querySelector('.profile__edit-button');\r\nconst addCardButton = document.querySelector('.profile__add-button');\r\nconst placesList = document.querySelector('.places__list');\r\nconst editItemPopup = document.querySelector('.popup_type_edit');\r\nconst editAvatarPopup = document.querySelector('.popup_type_new-avatar');\r\nconst editItemAdd = document.querySelector('.popup_type_new-card');\r\nconst deleteItemPopup = document.querySelector('.popup_type_delete-card');\r\nconst cardImagePopup = document.querySelector('.popup_type_image');\r\nlet modifiedCardId = null;\r\nlet modifiedCardTargetButton = null;\r\nconst cardImage = cardImagePopup.querySelector('.popup__image');\r\nconst cardCaption = cardImagePopup.querySelector('.popup__caption');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescr = document.querySelector('.profile__description');\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst allPopups = document.querySelectorAll('.popup');\r\nconst addForm = document.forms['new-place'];\r\nconst editForm = document.forms['edit-profile'];\r\nconst deleteForm = document.forms['delete-card'];\r\nconst changeAvatarForm = document.forms['new-avatar'];\r\nconst nameInput = editForm.elements.name;\r\nconst descrInput = editForm.elements.description;\r\nconst cardFunctions = {delete: handleDeletePlace, like: handleLikePlace, popup: handleImageClick}\r\nconst handleError = (err) => {console.log(`Ошибка!: ${err}`)}\r\n\r\n// Функция добавления новой карточки\r\n\r\nfunction addCard(evt) {\r\n  const newCard = {};\r\n  const placeInput = addForm.elements['place-name'];\r\n  const urlInput = addForm.elements.link;        \r\n  evt.preventDefault();\r\n  addForm.elements['submit-button'].textContent = 'Сохранение...';\r\n  newCard.name = placeInput.value;\r\n  newCard.link = urlInput.value;\r\n  newCard.descr = placeInput.value;\r\n  newCard.owner = {_id: apiConfig.id}; // для определения владельца карточки\r\n  sendCard(newCard, apiConfig)\r\n  .then((data) => {\r\n    renderCard(data, 'prepend');\r\n    hidePopup(editItemAdd);\r\n  })\r\n  .catch(handleError)\r\n  .finally(() => {     \r\n    changeSubmitButton(editItemAdd);\r\n  })\r\n  addForm.reset();\r\n}\r\n\r\n// Обработчик удаления карточки\r\n\r\nfunction handleDeletePlace(id, evt) {\r\n  modifiedCardTargetButton = evt;\r\n  modifiedCardId = id;\r\n  showPopup(deleteItemPopup);\r\n}\r\n\r\n// Обработчик лайка в карточке\r\n\r\nfunction handleLikePlace(id, evt) {\r\n  modifiedCardId = id;\r\n  modifiedCardTargetButton = evt;\r\n  if (checkLike(evt)) {\r\n    removeLike(modifiedCardId, apiConfig)    \r\n    .then((data) => {\r\n      likeCard(data.likes.length, modifiedCardTargetButton);\r\n    })\r\n    .catch(handleError)\r\n  } else {\r\n    sendLike(modifiedCardId, apiConfig)    \r\n    .then((data) => {\r\n        likeCard(data.likes.length , modifiedCardTargetButton);\r\n    })\r\n    .catch(handleError)\r\n  }\r\n}\r\n\r\n// Функция отрисовки карточек\r\n\r\nfunction renderCard(item, method='append') {\r\n  const cardElement = createCard(item, cardFunctions, apiConfig);\r\n  placesList[method](cardElement);\r\n}\r\n\r\n// Функция открытия попапа с картинкой в карточке\r\n\r\nfunction handleImageClick(evt) {\r\n  const currentCard = evt.target.closest('.places__item');\r\n  const cardName = currentCard.querySelector('.card__description');\r\n  cardImage.src = evt.target.src;  // добавить ссылку на картинку\r\n  cardImage.alt = evt.target.alt;  \r\n  cardCaption.innerText = cardName.innerText;  // добавить текст подписи к картинке\r\n  showPopup(cardImagePopup);  // показать попап с картинкой и текстом\r\n}\r\n\r\n// Функция возвращения надписи кнопки после ответа сервера\r\n\r\nfunction changeSubmitButton(itemPopup) {\r\n  setTimeout(() => {\r\n    const submitButton = itemPopup.querySelector('.popup__button');\r\n      if (itemPopup.classList.contains('popup_type_edit') || \r\n      itemPopup.classList.contains('popup_type_new-card') ||\r\n      itemPopup.classList.contains('popup_type_new-avatar')) {\r\n        submitButton.textContent = 'Сохранить';\r\n      }\r\n  }, 2000)  \r\n}\r\n\r\n// Запускаем всё\r\n\r\nPromise.all([\r\n  getProfile(apiConfig),\r\n  getCards(apiConfig)\r\n])\r\n.then(([getProfileData, getCardsData]) => {\r\n  profileTitle.textContent = getProfileData.name;\r\n  profileDescr.textContent = getProfileData.about;\r\n  profileImage.setAttribute('style', `background-image: url(${getProfileData.avatar})`);\r\n  apiConfig.id = getProfileData._id; // сохраняем id себя, как пользователя\r\n  getCardsData.forEach((item) => {\r\n    renderCard(item);\r\n  });\r\n})\r\n.catch(handleError) \r\n\r\n// Запускаем валидацию форм\r\n\r\nenableValidation(validationOptions);\r\n\r\n// Вешаем обработчик кликов закрытия на формы (вариант)\r\n\r\nallPopups.forEach(function(item) {\r\n  item.addEventListener('click', function(evt) {\r\n    if ((evt.target.classList.contains('popup__close')) || ((evt.target.classList.contains('popup')))) {\r\n      hidePopup(item);\r\n    }\r\n  });\r\n})\r\n\r\n// Слушаем submit в форме редактирования профиля\r\n\r\neditForm.addEventListener('submit', function(evt) {\r\n  evt.preventDefault();\r\n  editForm.elements['submit-button'].textContent = 'Сохранение...';\r\n  editProfile(nameInput, descrInput, apiConfig)\r\n  .then((data) => {\r\n    profileTitle.textContent = data.name;\r\n    profileDescr.textContent = data.about;\r\n    hidePopup(editItemPopup);\r\n  })      \r\n  .catch(handleError)\r\n  .finally(() => {        \r\n    changeSubmitButton(editItemPopup);  \r\n  })\r\n});\r\n\r\n// Слушаем submit в форме добавления карточки\r\n\r\naddForm.addEventListener('submit', addCard);\r\n\r\n// Слушаем submit в форме удаления карточки\r\n\r\ndeleteForm.addEventListener('submit', function(evt) {\r\n  evt.preventDefault();\r\n  deleteCard(modifiedCardId, apiConfig)\r\n  .then(() => {\r\n    deletePlace(modifiedCardTargetButton);\r\n    hidePopup(deleteItemPopup);\r\n  })\r\n  .catch(handleError)\r\n  .finally(() => {      \r\n    changeSubmitButton(deleteItemPopup);\r\n  })\r\n})\r\n\r\n// Слушаем submit в форме редактирования аватара\r\n\r\nchangeAvatarForm.addEventListener('submit', function(evt) {\r\n  const urlInput = changeAvatarForm.elements.link.value;\r\n  evt.preventDefault();\r\n  changeAvatarForm.elements['submit-button'].textContent = 'Сохранение...';\r\n  editAvatar(urlInput, apiConfig)\r\n  .then((data) => {\r\n    console.log(data);\r\n    profileImage.setAttribute('style', `background-image: url(${data.avatar})`);\r\n    hidePopup(editAvatarPopup);\r\n  })\r\n  .catch(handleError)\r\n  .finally(() => {      \r\n    changeSubmitButton(editAvatarPopup);\r\n  })\r\n})\r\n\r\n// Слушаем клик на картинке аватара\r\n\r\nprofileImage.addEventListener('click', (evt) => {\r\n  changeAvatarForm.reset();\r\n  showPopup(editAvatarPopup);\r\n  clearValidation(changeAvatarForm, validationOptions);\r\n})\r\n\r\n// Слушаем клик на кнопке редактирования профиля\r\n\r\neditProfileButton.addEventListener('click', function() {\r\n  nameInput.value = profileTitle.textContent;\r\n  descrInput.value = profileDescr.textContent;\r\n  clearValidation(editForm, validationOptions);\r\n  showPopup(editItemPopup);\r\n})\r\n\r\n// Слушаем клик на кнопке добавления карточки\r\n  \r\naddCardButton.addEventListener('click', function() {\r\n  clearValidation(addForm, validationOptions);\r\n  addForm.reset();\r\n  showPopup(editItemAdd);\r\n})"],"names":["apiConfig","baseUrl","headers","authorization","id","validationOptions","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","likeCard","likesNumber","evt","likeButton","target","nextElementSibling","textContent","classList","toggle","hidePopup","itemPopup","remove","document","removeEventListener","pushButtonListener","showPopup","popup","add","addEventListener","key","querySelector","clearValidation","formElement","formElements","getFormElements","list","forEach","inputElement","hideInputError","toggleButtonState","element","result","button","disabled","Array","from","querySelectorAll","errorElement","concat","handleResponse","res","ok","json","Promise","reject","status","config","editProfileButton","addCardButton","placesList","editItemPopup","editAvatarPopup","editItemAdd","deleteItemPopup","cardImagePopup","modifiedCardId","modifiedCardTargetButton","cardImage","cardCaption","profileTitle","profileDescr","profileImage","allPopups","addForm","forms","editForm","deleteForm","changeAvatarForm","nameInput","elements","name","descrInput","description","cardFunctions","delete","like","cardId","contains","checkLike","fetch","method","then","data","likes","length","catch","handleError","sendLike","cardName","closest","src","alt","innerText","err","console","log","renderCard","item","arguments","undefined","cardElement","card","cardFunc","placeElement","content","cloneNode","deleteCardButton","link","_id","checkExistLike","owner","createCard","changeSubmitButton","setTimeout","submitButton","all","getCards","_ref","_ref2","getProfileData","getCardsData","about","setAttribute","avatar","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","showInputError","validationMessage","isValid","some","setEventListeners","enableValidation","preventDefault","namePr","descriptionPr","body","JSON","stringify","value","editProfile","finally","newCard","placeInput","urlInput","descr","sendCard","reset","deleteCard","deletePlace","editAvatar"],"sourceRoot":""}