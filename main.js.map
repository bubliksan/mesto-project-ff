{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/api_config.js","webpack://mesto-project-ff/./src/scripts/validation_options.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const apiConfig = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-29',\r\n    headers: {\r\n        authorization: '16401e6c-35b8-4783-8b7e-d7c1e645cdd4',\r\n        'Content-Type': 'application/json' \r\n    },\r\n    id: 'dc464caf488af377d2058b30'\r\n}","export const validationOptions = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'form__input_error_visible'\r\n}","// Функция создания карточки\r\n\r\nexport function createCard(card, cardFunc, config) {\r\n  const placeTemplate = document.querySelector('#card-template').content; // Берём содержимое шаблона\r\n  const placeElement = placeTemplate.querySelector('.places__item').cloneNode(true); //клонируем\r\n  const cardImage = placeElement.querySelector('.card__image');\r\n  const deleteCardButton = placeElement.querySelector('.card__delete-button');\r\n  cardImage.src = card.link; // Наполняем\r\n  cardImage.alt = card.name;\r\n  placeElement.querySelector('.card__like-count').textContent = card.likes.length;\r\n  placeElement.querySelector('.card__title').textContent = card.name;\r\n  if(checkLike(card, config)) {\r\n    placeElement.querySelector('.card__like-button').classList.add('card__like-button_is-active');\r\n  }\r\n  if (card.owner._id === config.id) {\r\n    deleteCardButton.classList.remove('card__delete-button-hidden');\r\n    deleteCardButton.addEventListener('click', (evt) => cardFunc.delete(card._id, evt)); //Обработчик из функции удаления\r\n  }\r\n  placeElement.querySelector('.card__like-button').addEventListener('click', (evt) => cardFunc.like(card._id, evt));\r\n  cardImage.addEventListener('click', cardFunc.popup);\r\n  return(placeElement);\r\n}\r\n\r\n// Функция проверки своего лайка в карточке\r\n\r\nfunction checkLike(card, config) {\r\n  let result = false\r\n  card.likes.forEach((item) => {\r\n    if(item._id === config.id) {\r\n      result = true;      \r\n    }\r\n  })\r\n  return result;\r\n}\r\n\r\n// Функция лайка в карточке\r\n\r\nexport function likeCard(likesNumber, evt) {\r\n  const likeButton = evt.target;\r\n  likeButton.nextElementSibling.textContent = likesNumber;\r\n  likeButton.classList.toggle('card__like-button_is-active');\r\n}\r\n\r\n// Функция удаления карточки\r\n\r\nexport function deletePlace(evt) {\r\n  const deleteButton = evt.target;\r\n  const place = deleteButton.closest('.places__item');\r\n  place.remove();\r\n}","// Функция закрытия попапа\r\n\r\nexport function hidePopup(itemPopup) {\r\n  itemPopup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', pushButtonListener);\r\n  setTimeout(() => changeSubmitButton(itemPopup), 2000);\r\n}\r\n  \r\n// Функция открытия попапа\r\n  \r\nexport function showPopup(popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', pushButtonListener);\r\n}\r\n\r\n// Функция слушателя нажатия клавиши для попапа\r\n\r\nexport function pushButtonListener(evt) {\r\n  if (evt.key == 'Escape') {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    hidePopup(openedPopup);\r\n  }\r\n}\r\n\r\nfunction changeSubmitButton(itemPopup) {\r\n  const submitButton = itemPopup.querySelector('.popup__button');\r\n  if (itemPopup.classList.contains('popup_type_edit') || \r\n      itemPopup.classList.contains('popup_type_new-card') ||\r\n      itemPopup.classList.contains('popup_type_new-avatar')) {\r\n    submitButton.textContent = 'Сохранить';\r\n  }\r\n}","// Выбираем все формы и для каждой вызываем утановку слушателя\r\n\r\nexport function enableValidation(validationOptions) {\r\n    const formList = Array.from(document.querySelectorAll(validationOptions.formSelector));\r\n    formList.forEach((formElement) => {\r\n      setEventListeners(formElement, validationOptions);\r\n    });\r\n}\r\n\r\n// Очитска валидации и установка кнопки в неактивное состояние\r\n\r\nexport function clearValidation(formElement, validationOptions) {    \r\n    const formElements = getFormElements(formElement, validationOptions);\r\n    formElements[0].forEach((inputElement) => {\r\n        hideInputError(inputElement, formElement, validationOptions);\r\n    })\r\n    formElements[1].disabled = true;\r\n    formElements[1].classList.add(validationOptions.inactiveButtonClass);\r\n\r\n}\r\n\r\n// Функция возвращает массив с элементами формы\r\n\r\nfunction getFormElements(formElement, validationOptions) {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationOptions.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationOptions.submitButtonSelector);\r\n    return [inputList, buttonElement];\r\n}\r\n\r\n// Для каждого input в форме вешаем слушатель, отключаем кнопку\r\n\r\nfunction setEventListeners(formElement, validationOptions) {\r\n    const formElements = getFormElements(formElement, validationOptions);\r\n    formElements[0].forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n        isValid(formElement, inputElement, validationOptions);\r\n        toggleButtonState(formElements[0], formElements[1], validationOptions);\r\n      });\r\n    });\r\n}\r\n\r\n// Переключение состояния кнопки, в зависимости от валидации\r\n\r\nfunction toggleButtonState(inputList, buttonElement, validationOptions) {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(validationOptions.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(validationOptions.inactiveButtonClass);\r\n    }\r\n}\r\n\r\n// Функция валидации элемента\r\n\r\nfunction isValid(formElement, inputElement, validationOptions) {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n        inputElement.setCustomValidity('');\r\n    }\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(inputElement, formElement, inputElement.validationMessage, validationOptions);\r\n    } else {\r\n        hideInputError(inputElement, formElement, validationOptions);\r\n    }\r\n}\r\n\r\n// Отображение ошибки валидации и изменение внешнего вида\r\n\r\nfunction showInputError(inputElement, formElement, errorMessage, validationOptions) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}_error`);\r\n    inputElement.classList.add(validationOptions.inputErrorClass);\r\n    errorElement.classList.add(validationOptions.errorClass);\r\n    errorElement.textContent = errorMessage;    \r\n}\r\n\r\n// Скрытие ошибки валидации и отображение внешнего вида\r\n\r\nfunction hideInputError(inputElement, formElement, validationOptions) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}_error`);\r\n    inputElement.classList.remove(validationOptions.inputErrorClass);\r\n    errorElement.classList.remove(validationOptions.errorClass);\r\n    errorElement.textContent = '';\r\n}\r\n\r\n// Проверка валидации полей для сосотояния кнопки\r\n\r\nfunction hasInvalidInput(inputList) {\r\n    return inputList.some((inputElement) => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n}","const handleResponse = res => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n   return Promise.reject(`Ошибка: ${res.status}`); \r\n}\r\n\r\nconst handleError = (err) => {\r\n    console.log(`Problem! ${err}`)\r\n}\r\n\r\n// Запрос к серверу на загрузку данных профиля\r\n\r\nexport function getProfile(config) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        headers: {\r\n            authorization: config.headers.authorization\r\n        }\r\n    })\r\n    .then(handleResponse)    \r\n    .catch(handleError)\r\n}\r\n\r\n// Запрос к серверу на обновление данных профиля \r\n\r\nexport function editProfile(namePr, descriptionPr, config) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: `${namePr.value}`,\r\n            about: `${descriptionPr.value}`\r\n        })\r\n    })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n}\r\n\r\n// Запрос к серверу на загрузку карточек\r\n\r\nexport function getCards(config) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        headers: {\r\n            authorization: config.headers.authorization\r\n        }\r\n    })\r\n    .then(handleResponse)\r\n    .catch(handleError)    \r\n}\r\n\r\n// Запрос к серверу на добавление карточки\r\n\r\nexport function sendCard(newCard, config) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: `${newCard.name}`,\r\n            link: `${newCard.link}`\r\n        })\r\n    })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n}\r\n\r\n// Запрос к серверу на удаление карточки\r\n\r\nexport function deleteCard(cardId, config) {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',        \r\n        headers: config.headers,\r\n    })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n}\r\n\r\n// Запрос к серверу на установку лайка\r\n\r\nexport function sendLike(cardId, config) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',        \r\n        headers: config.headers,\r\n    })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n}\r\n\r\n// Запрос к серверу на снятие лайка\r\n\r\nexport function removeLike(cardId, config) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',        \r\n        headers: config.headers,\r\n    })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n}\r\n\r\n// Запрос к серверу на изменение аватара\r\n\r\nexport function editAvatar(link, config) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: `${link}`\r\n        })\r\n    })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n}","// @todo: Темплейт карточки\r\n\r\n// @todo: DOM узлы\r\n\r\n// @todo: Функция создания карточки\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// @todo: Вывести карточки на страницу\r\n\r\nimport './index.css';\r\nimport { apiConfig } from './scripts/api_config.js';\r\nimport { validationOptions } from './scripts/validation_options.js';\r\nimport { createCard, likeCard, deletePlace } from './components/card.js';\r\nimport { hidePopup, showPopup } from './components/modal.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\nimport { getProfile,\r\n  editProfile,\r\n  getCards,\r\n  sendCard,\r\n  deleteCard,\r\n  sendLike,\r\n  removeLike,\r\n  editAvatar } from './components/api.js';\r\nconst editProfileButton = document.querySelector('.profile__edit-button');\r\nconst addCardButton = document.querySelector('.profile__add-button');\r\nconst placesList = document.querySelector('.places__list');\r\nconst editItemPopup = document.querySelector('.popup_type_edit');\r\nconst editAvatarPopup = document.querySelector('.popup_type_new-avatar');\r\nconst editItemAdd = document.querySelector('.popup_type_new-card');\r\nconst deleteItemPopup = document.querySelector('.popup_type_delete-card');\r\nconst cardImagePopup = document.querySelector('.popup_type_image');\r\nlet modifiedCardId = null;\r\nlet modifiedCardTargetButton = null;\r\nconst cardImage = cardImagePopup.querySelector('.popup__image');\r\nconst cardCaption = cardImagePopup.querySelector('.popup__caption');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescr = document.querySelector('.profile__description');\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst allPopups = document.querySelectorAll('.popup');\r\nconst addForm = document.forms['new-place'];\r\nconst editForm = document.forms['edit-profile'];\r\nconst deleteForm = document.forms['delete-card'];\r\nconst changeAvatarForm = document.forms['new-avatar'];\r\nconst nameInput = editForm.elements.name;\r\nconst descrInput = editForm.elements.description;\r\nconst cardFunctions = {delete: handleDeletePlace, like: handleLikePlace, popup: handleImageClick}\r\n\r\n// Функция добавления новой карточки\r\n\r\nfunction addCard(evt) {\r\n  const newCard = {};\r\n  const placeInput = addForm.elements['place-name'];\r\n  const urlInput = addForm.elements.link;        \r\n  evt.preventDefault();\r\n  addForm.elements['submit-button'].textContent = 'Сохранение...';\r\n  newCard.name = placeInput.value;\r\n  newCard.link = urlInput.value;\r\n  newCard.descr = placeInput.value;\r\n  newCard.owner = {_id: apiConfig.id}; // для определения владельца карточки\r\n  sendCard(newCard, apiConfig).then((data) => {\r\n    renderCard(data, 'prepend');\r\n    hidePopup(editItemAdd);\r\n  })\r\n  addForm.reset();\r\n}\r\n\r\n// Обработчик удаления карточки\r\n\r\nfunction handleDeletePlace(id, evt) {\r\n  modifiedCardTargetButton = evt;\r\n  modifiedCardId = id;\r\n  showPopup(deleteItemPopup);\r\n}\r\n\r\n// обработчик лайка в карточке\r\n\r\nfunction handleLikePlace(id, evt) {\r\n  modifiedCardId = id;\r\n  modifiedCardTargetButton = evt;\r\n  if (evt.target.classList.contains('card__like-button_is-active')) {\r\n    removeLike(modifiedCardId, apiConfig).then((data) => {\r\n      likeCard(data.likes.length, modifiedCardTargetButton);\r\n      evt.target.classList.remove('card__like-button_is-active');\r\n    })\r\n  } else {\r\n    sendLike(modifiedCardId, apiConfig).then((data) => {\r\n        likeCard(data.likes.length , modifiedCardTargetButton);\r\n    })\r\n  }\r\n}\r\n\r\n// Функция отрисовки карточек\r\n\r\nfunction renderCard(item, method='append') {\r\n  const cardElement = createCard(item, cardFunctions, apiConfig);\r\n  placesList[method](cardElement);\r\n}\r\n\r\n// функция открытия попапа с картинкой в карточке\r\n\r\nfunction handleImageClick(evt) {\r\n  const currentCard = evt.target.closest('.places__item');\r\n  const cardName = currentCard.querySelector('.card__description');\r\n  cardImage.src = evt.target.src;  // добавить ссылку на картинку\r\n  cardImage.alt = evt.target.alt;  \r\n  cardCaption.innerText = cardName.innerText;  // добавить текст подписи к картинке\r\n  showPopup(cardImagePopup);  // показать попап с картинкой и текстом\r\n}\r\n\r\n// Запускаем всё\r\n\r\nPromise.all([\r\n  getProfile(apiConfig),\r\n  getCards(apiConfig)\r\n])\r\n.then(([getProfileData, getCardsData]) => {\r\n  profileTitle.textContent = getProfileData.name;\r\n  profileDescr.textContent = getProfileData.about;\r\n  profileImage.setAttribute('style', `background-image: url(${getProfileData.avatar})`);\r\n  apiConfig.id = getProfileData._id; // сохраняем id себя, как пользователя\r\n  getCardsData.forEach((item) => {\r\n    renderCard(item);\r\n  });\r\n})\r\n\r\n// Запускаем валидацию форм\r\n\r\nenableValidation(validationOptions);\r\n\r\n// Вешаем обработчик кликов закрытия на формы (вариант)\r\n\r\nallPopups.forEach(function(item) {\r\n  item.addEventListener('click', function(evt) {\r\n    if ((evt.target.classList.contains('popup__close')) || ((evt.target.classList.contains('popup')))) {\r\n      hidePopup(item);\r\n    }\r\n  });\r\n})\r\n\r\n// Слушаем submit в форме редактирования профиля\r\n\r\neditForm.addEventListener('submit', function(evt) {\r\n  evt.preventDefault();\r\n  editForm.elements['submit-button'].textContent = 'Сохранение...';\r\n  editProfile(nameInput, descrInput, apiConfig).then((data) => {\r\n    profileTitle.textContent = data.name;\r\n    profileDescr.textContent = data.about;\r\n    hidePopup(editItemPopup);\r\n  })\r\n  \r\n});\r\n\r\n// Слушаем submit в форме добавления карточки\r\n\r\naddForm.addEventListener('submit', addCard);\r\n\r\n// Слушаем submit в форме удаления карточки\r\n\r\ndeleteForm.addEventListener('submit', function(evt) {\r\n  evt.preventDefault();\r\n  deleteCard(modifiedCardId, apiConfig).then(() => {\r\n    deletePlace(modifiedCardTargetButton);\r\n    hidePopup(deleteItemPopup);\r\n  }) \r\n})\r\n\r\n// Слушаем submit в форме редактирования аватара\r\n\r\nchangeAvatarForm.addEventListener('submit', function(evt) {\r\n  const urlInput = changeAvatarForm.elements.link.value;\r\n  evt.preventDefault();\r\n  changeAvatarForm.elements['submit-button'].textContent = 'Сохранение...';\r\n  editAvatar(urlInput, apiConfig).then(() => {\r\n    profileImage.setAttribute('style', `background-image: url(${urlInput})`);\r\n    hidePopup(editAvatarPopup);\r\n  })  \r\n})\r\n\r\n// Слушаем клик на картинке профиля\r\n\r\nprofileImage.addEventListener('click', (evt) => {\r\n  changeAvatarForm.reset();\r\n  showPopup(editAvatarPopup); \r\n})\r\n\r\n// Слушаем клик на кнопке редактирования профиля\r\n\r\neditProfileButton.addEventListener('click', function() {\r\n  nameInput.value = profileTitle.textContent;\r\n  descrInput.value = profileDescr.textContent;\r\n  clearValidation(editForm, validationOptions);\r\n  showPopup(editItemPopup);\r\n});\r\n\r\n// Слушаем клик на кнопке добавления карточки\r\n  \r\naddCardButton.addEventListener('click', function() {\r\n  clearValidation(addForm, validationOptions);\r\n  addForm.reset();\r\n  showPopup(editItemAdd);\r\n});"],"names":["apiConfig","baseUrl","headers","authorization","id","validationOptions","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","likeCard","likesNumber","evt","likeButton","target","nextElementSibling","textContent","classList","toggle","hidePopup","itemPopup","remove","document","removeEventListener","pushButtonListener","setTimeout","submitButton","querySelector","contains","changeSubmitButton","showPopup","popup","add","addEventListener","key","clearValidation","formElement","formElements","getFormElements","forEach","inputElement","hideInputError","disabled","Array","from","querySelectorAll","errorElement","concat","handleResponse","res","ok","json","Promise","reject","status","handleError","err","console","log","config","editProfileButton","addCardButton","placesList","editItemPopup","editAvatarPopup","editItemAdd","deleteItemPopup","cardImagePopup","modifiedCardId","modifiedCardTargetButton","cardImage","cardCaption","profileTitle","profileDescr","profileImage","allPopups","addForm","forms","editForm","deleteForm","changeAvatarForm","nameInput","elements","name","descrInput","description","cardFunctions","delete","like","cardId","fetch","method","then","catch","data","likes","length","sendLike","cardName","closest","src","alt","innerText","renderCard","item","arguments","undefined","cardElement","card","cardFunc","placeElement","content","cloneNode","deleteCardButton","link","result","_id","checkLike","owner","createCard","all","getCards","_ref","_ref2","getProfileData","getCardsData","about","setAttribute","avatar","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","showInputError","validationMessage","isValid","inputList","buttonElement","some","hasInvalidInput","toggleButtonState","setEventListeners","enableValidation","preventDefault","namePr","descriptionPr","body","JSON","stringify","value","editProfile","newCard","placeInput","urlInput","descr","sendCard","reset","deleteCard","deletePlace","editAvatar"],"sourceRoot":""}