{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/api_config.js","webpack://mesto-project-ff/./src/scripts/validation_options.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const apiConfig = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-29',\r\n    headers: {\r\n        authorization: '16401e6c-35b8-4783-8b7e-d7c1e645cdd4',\r\n        'Content-Type': 'application/json' \r\n    },\r\n    id: 'dc464caf488af377d2058b30'\r\n}","export const validationOptions = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'form__input_error_visible'\r\n}","// Функция создания карточки\r\n\r\nexport function createCard(card, cardFunc, config) {\r\n  const placeTemplate = document.querySelector('#card-template').content; // Берём содержимое шаблона\r\n  const placeElement = placeTemplate.querySelector('.places__item').cloneNode(true); //клонируем\r\n  const cardImage = placeElement.querySelector('.card__image');\r\n  const deleteCardButton = placeElement.querySelector('.card__delete-button');\r\n  cardImage.src = card.link; // Наполняем\r\n  cardImage.alt = card.name;\r\n  placeElement.querySelector('.card__like-count').textContent = card.likes.length;\r\n  placeElement.querySelector('.card__title').textContent = card.name;\r\n  if(checkExistLike(card, config)) {\r\n    placeElement.querySelector('.card__like-button').classList.add('card__like-button_is-active');\r\n  }\r\n  if (card.owner._id === config.id) {\r\n    deleteCardButton.classList.remove('card__delete-button-hidden');\r\n    deleteCardButton.addEventListener('click', (evt) => cardFunc.delete(card._id, evt)); //Обработчик из функции удаления\r\n  }\r\n  placeElement.querySelector('.card__like-button').addEventListener('click', (evt) => cardFunc.like(card._id, evt));\r\n  cardImage.addEventListener('click', cardFunc.popup);\r\n  return(placeElement);\r\n}\r\n\r\n// Функция проверки своего лайка в карточке, полученной с сервера\r\n\r\nfunction checkExistLike(card, config) {\r\n  let result = false\r\n  card.likes.forEach((item) => {\r\n    if(item._id === config.id) {\r\n      result = true;      \r\n    }\r\n  })\r\n  return result;\r\n}\r\n\r\n// Функция проверки своего лайка в карточке\r\n\r\nexport function checkLike(evt) {\r\n  let result = false;\r\n  if (evt.target.classList.contains('card__like-button_is-active')) {\r\n    result = true;\r\n  }\r\n  return result;\r\n}\r\n\r\n// Функция лайка в карточке\r\n\r\nexport function likeCard(likesNumber, evt) {\r\n  const likeButton = evt.target;\r\n  likeButton.nextElementSibling.textContent = likesNumber;\r\n  likeButton.classList.toggle('card__like-button_is-active');\r\n}\r\n\r\n// Функция удаления карточки\r\n\r\nexport function deletePlace(evt) {\r\n  const deleteButton = evt.target;\r\n  const place = deleteButton.closest('.places__item');\r\n  place.remove();\r\n}","// Функция закрытия попапа\r\n\r\nexport function hidePopup(itemPopup) {\r\n  itemPopup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', pushButtonListener);\r\n}\r\n  \r\n// Функция открытия попапа\r\n  \r\nexport function showPopup(popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', pushButtonListener);\r\n}\r\n\r\n// Функция слушателя нажатия клавиши для попапа\r\n\r\nexport function pushButtonListener(evt) {\r\n  if (evt.key == 'Escape') {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    hidePopup(openedPopup);\r\n  }\r\n}","// Выбираем все формы и для каждой вызываем утановку слушателя\r\n\r\nexport function enableValidation(validationOptions) {\r\n    const formList = Array.from(document.querySelectorAll(validationOptions.formSelector));\r\n      formList.forEach((formElement) => {\r\n      setEventListeners(formElement, validationOptions);\r\n    });\r\n}\r\n\r\n// Очитска валидации и установка кнопки в неактивное состояние\r\n\r\nexport function clearValidation(formElement, validationOptions) {    \r\n    const formElements = getFormElements(formElement, validationOptions);\r\n    formElements.list.forEach((inputElement) => {\r\n        hideInputError(inputElement, formElement, validationOptions);\r\n    })\r\n    formElements.button.disabled = true;\r\n    formElements.button.classList.add(validationOptions.inactiveButtonClass);\r\n\r\n}\r\n\r\n// Функция возвращает массив с элементами формы\r\n\r\nfunction getFormElements(formElement, validationOptions) {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationOptions.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationOptions.submitButtonSelector);\r\n    return {list: inputList, button: buttonElement};\r\n}\r\n\r\n// Для каждого input в форме вешаем слушатель, отключаем кнопку\r\n\r\nfunction setEventListeners(formElement, validationOptions) {\r\n    const formElements = getFormElements(formElement, validationOptions);\r\n    formElements.list.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n        isValid(formElement, inputElement, validationOptions);\r\n        toggleButtonState(formElements.list, formElements.button, validationOptions);\r\n      });\r\n    });\r\n}\r\n\r\n// Переключение состояния кнопки, в зависимости от валидации\r\n\r\nfunction toggleButtonState(inputList, buttonElement, validationOptions) {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(validationOptions.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(validationOptions.inactiveButtonClass);\r\n    }\r\n}\r\n\r\n// Функция валидации элемента\r\n\r\nfunction isValid(formElement, inputElement, validationOptions) {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n        inputElement.setCustomValidity('');\r\n    }\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(inputElement, formElement, inputElement.validationMessage, validationOptions);\r\n    } else {\r\n        hideInputError(inputElement, formElement, validationOptions);\r\n    }\r\n}\r\n\r\n// Отображение ошибки валидации и изменение внешнего вида\r\n\r\nfunction showInputError(inputElement, formElement, errorMessage, validationOptions) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}_error`);\r\n    inputElement.classList.add(validationOptions.inputErrorClass);\r\n    errorElement.classList.add(validationOptions.errorClass);\r\n    errorElement.textContent = errorMessage;    \r\n}\r\n\r\n// Скрытие ошибки валидации и отображение внешнего вида\r\n\r\nfunction hideInputError(inputElement, formElement, validationOptions) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}_error`);\r\n    inputElement.classList.remove(validationOptions.inputErrorClass);\r\n    errorElement.classList.remove(validationOptions.errorClass);\r\n    errorElement.textContent = '';\r\n}\r\n\r\n// Проверка валидации полей для сосотояния кнопки\r\n\r\nfunction hasInvalidInput(inputList) {\r\n    return inputList.some((inputElement) => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n}","const handleResponse = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n   return Promise.reject(`Ошибка!: ${res.status}`); \r\n}\r\n\r\n// Запрос к серверу на загрузку данных профиля\r\n\r\nexport function getProfile(config) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        headers: {\r\n            authorization: config.headers.authorization\r\n        }\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на обновление данных профиля \r\n\r\nexport function editProfile(namePr, descriptionPr, config) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: `${namePr.value}`,\r\n            about: `${descriptionPr.value}`\r\n        })\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на загрузку карточек\r\n\r\nexport function getCards(config) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        headers: {\r\n            authorization: config.headers.authorization\r\n        }\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на добавление карточки\r\n\r\nexport function sendCard(newCard, config) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: `${newCard.name}`,\r\n            link: `${newCard.link}`\r\n        })\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на удаление карточки\r\n\r\nexport function deleteCard(cardId, config) {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',        \r\n        headers: config.headers,\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на установку лайка\r\n\r\nexport function sendLike(cardId, config) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',        \r\n        headers: config.headers,\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на снятие лайка\r\n\r\nexport function removeLike(cardId, config) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',        \r\n        headers: config.headers,\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\n// Запрос к серверу на изменение аватара\r\n\r\nexport function editAvatar(link, config) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: `${link}`\r\n        })\r\n    })\r\n    .then(handleResponse)\r\n}","// @todo: Темплейт карточки\r\n\r\n// @todo: DOM узлы\r\n\r\n// @todo: Функция создания карточки\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// @todo: Вывести карточки на страницу\r\n\r\nimport './index.css';\r\nimport { apiConfig } from './scripts/api_config.js';\r\nimport { validationOptions } from './scripts/validation_options.js';\r\nimport { createCard, likeCard, deletePlace, checkLike } from './components/card.js';\r\nimport { hidePopup, showPopup } from './components/modal.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\nimport { getProfile,\r\n  editProfile,\r\n  getCards,\r\n  sendCard,\r\n  deleteCard,\r\n  sendLike,\r\n  removeLike,\r\n  editAvatar } from './components/api.js';\r\nconst editProfileButton = document.querySelector('.profile__edit-button');\r\nconst addCardButton = document.querySelector('.profile__add-button');\r\nconst placesList = document.querySelector('.places__list');\r\nconst editItemPopup = document.querySelector('.popup_type_edit');\r\nconst editAvatarPopup = document.querySelector('.popup_type_new-avatar');\r\nconst editItemAdd = document.querySelector('.popup_type_new-card');\r\nconst deleteItemPopup = document.querySelector('.popup_type_delete-card');\r\nconst cardImagePopup = document.querySelector('.popup_type_image');\r\nlet modifiedCardId = null;\r\nlet modifiedCardTargetButton = null;\r\nconst cardImage = cardImagePopup.querySelector('.popup__image');\r\nconst cardCaption = cardImagePopup.querySelector('.popup__caption');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescr = document.querySelector('.profile__description');\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst allPopups = document.querySelectorAll('.popup');\r\nconst addForm = document.forms['new-place'];\r\nconst editForm = document.forms['edit-profile'];\r\nconst deleteForm = document.forms['delete-card'];\r\nconst changeAvatarForm = document.forms['new-avatar'];\r\nconst nameInput = editForm.elements.name;\r\nconst descrInput = editForm.elements.description;\r\nconst cardFunctions = {delete: handleDeletePlace, like: handleLikePlace, popup: handleImageClick}\r\nconst handleError = (err) => {console.log(`Ошибка!: ${err}`)}\r\n\r\n// Функция добавления новой карточки\r\n\r\nfunction addCard(evt) {\r\n  const newCard = {};\r\n  const placeInput = addForm.elements['place-name'];\r\n  const urlInput = addForm.elements.link;        \r\n  evt.preventDefault();\r\n  addForm.elements['submit-button'].textContent = 'Сохранение...';\r\n  newCard.name = placeInput.value;\r\n  newCard.link = urlInput.value;\r\n  newCard.descr = placeInput.value;\r\n  newCard.owner = {_id: apiConfig.id}; // для определения владельца карточки\r\n  sendCard(newCard, apiConfig)\r\n  .then((data) => {\r\n    renderCard(data, 'prepend');\r\n    hidePopup(editItemAdd);\r\n  })\r\n  .catch(handleError)\r\n  .finally(() => {     \r\n    changeSubmitButton(editItemAdd);\r\n  })\r\n  addForm.reset();\r\n}\r\n\r\n// Обработчик удаления карточки\r\n\r\nfunction handleDeletePlace(id, evt) {\r\n  modifiedCardTargetButton = evt;\r\n  modifiedCardId = id;\r\n  showPopup(deleteItemPopup);\r\n}\r\n\r\n// Обработчик лайка в карточке\r\n\r\nfunction handleLikePlace(id, evt) {\r\n  modifiedCardId = id;\r\n  modifiedCardTargetButton = evt;\r\n  if (checkLike(evt)) {\r\n    removeLike(modifiedCardId, apiConfig)    \r\n    .catch(handleError)\r\n    .then((data) => {\r\n      likeCard(data.likes.length, modifiedCardTargetButton);\r\n    })\r\n  } else {\r\n    sendLike(modifiedCardId, apiConfig)    \r\n    .catch(handleError)\r\n    .then((data) => {\r\n        likeCard(data.likes.length , modifiedCardTargetButton);\r\n    })\r\n  }\r\n}\r\n\r\n// Функция отрисовки карточек\r\n\r\nfunction renderCard(item, method='append') {\r\n  const cardElement = createCard(item, cardFunctions, apiConfig);\r\n  placesList[method](cardElement);\r\n}\r\n\r\n// Функция открытия попапа с картинкой в карточке\r\n\r\nfunction handleImageClick(evt) {\r\n  const currentCard = evt.target.closest('.places__item');\r\n  const cardName = currentCard.querySelector('.card__description');\r\n  cardImage.src = evt.target.src;  // добавить ссылку на картинку\r\n  cardImage.alt = evt.target.alt;  \r\n  cardCaption.innerText = cardName.innerText;  // добавить текст подписи к картинке\r\n  showPopup(cardImagePopup);  // показать попап с картинкой и текстом\r\n}\r\n\r\n// Функция возвращения надписи кнопки после ответа сервера\r\n\r\nfunction changeSubmitButton(itemPopup) {\r\n  setTimeout(() => {\r\n    const submitButton = itemPopup.querySelector('.popup__button');\r\n      if (itemPopup.classList.contains('popup_type_edit') || \r\n      itemPopup.classList.contains('popup_type_new-card') ||\r\n      itemPopup.classList.contains('popup_type_new-avatar')) {\r\n        submitButton.textContent = 'Сохранить';\r\n      }\r\n  }, 2000)  \r\n}\r\n\r\n// Запускаем всё\r\n\r\nPromise.all([\r\n  getProfile(apiConfig),\r\n  getCards(apiConfig)\r\n])\r\n.then(([getProfileData, getCardsData]) => {\r\n  profileTitle.textContent = getProfileData.name;\r\n  profileDescr.textContent = getProfileData.about;\r\n  profileImage.setAttribute('style', `background-image: url(${getProfileData.avatar})`);\r\n  apiConfig.id = getProfileData._id; // сохраняем id себя, как пользователя\r\n  getCardsData.forEach((item) => {\r\n    renderCard(item);\r\n  });\r\n})\r\n.catch(handleError) \r\n\r\n// Запускаем валидацию форм\r\n\r\nenableValidation(validationOptions);\r\n\r\n// Вешаем обработчик кликов закрытия на формы (вариант)\r\n\r\nallPopups.forEach(function(item) {\r\n  item.addEventListener('click', function(evt) {\r\n    if ((evt.target.classList.contains('popup__close')) || ((evt.target.classList.contains('popup')))) {\r\n      hidePopup(item);\r\n    }\r\n  });\r\n})\r\n\r\n// Слушаем submit в форме редактирования профиля\r\n\r\neditForm.addEventListener('submit', function(evt) {\r\n  evt.preventDefault();\r\n  editForm.elements['submit-button'].textContent = 'Сохранение...';\r\n  editProfile(nameInput, descrInput, apiConfig)\r\n  .then((data) => {\r\n    profileTitle.textContent = data.name;\r\n    profileDescr.textContent = data.about;\r\n    hidePopup(editItemPopup);\r\n  })      \r\n  .catch(handleError)\r\n  .finally(() => {        \r\n    changeSubmitButton(editItemPopup);  \r\n  })\r\n});\r\n\r\n// Слушаем submit в форме добавления карточки\r\n\r\naddForm.addEventListener('submit', addCard);\r\n\r\n// Слушаем submit в форме удаления карточки\r\n\r\ndeleteForm.addEventListener('submit', function(evt) {\r\n  evt.preventDefault();\r\n  deleteCard(modifiedCardId, apiConfig)\r\n  .then(() => {\r\n    deletePlace(modifiedCardTargetButton);\r\n    hidePopup(deleteItemPopup);\r\n  })\r\n  .catch(handleError)\r\n  .finally(() => {      \r\n    changeSubmitButton(deleteItemPopup);\r\n  })\r\n})\r\n\r\n// Слушаем submit в форме редактирования аватара\r\n\r\nchangeAvatarForm.addEventListener('submit', function(evt) {\r\n  const urlInput = changeAvatarForm.elements.link.value;\r\n  evt.preventDefault();\r\n  changeAvatarForm.elements['submit-button'].textContent = 'Сохранение...';\r\n  editAvatar(urlInput, apiConfig)\r\n  .then((data) => {\r\n    console.log(data);\r\n    profileImage.setAttribute('style', `background-image: url(${data.avatar})`);\r\n    hidePopup(editAvatarPopup);\r\n  })\r\n  .catch(handleError)\r\n  .finally(() => {      \r\n    changeSubmitButton(editAvatarPopup);\r\n  })\r\n})\r\n\r\n// Слушаем клик на картинке аватара\r\n\r\nprofileImage.addEventListener('click', (evt) => {\r\n  changeAvatarForm.reset();\r\n  showPopup(editAvatarPopup);\r\n  clearValidation(changeAvatarForm, validationOptions);\r\n})\r\n\r\n// Слушаем клик на кнопке редактирования профиля\r\n\r\neditProfileButton.addEventListener('click', function() {\r\n  nameInput.value = profileTitle.textContent;\r\n  descrInput.value = profileDescr.textContent;\r\n  clearValidation(editForm, validationOptions);\r\n  showPopup(editItemPopup);\r\n})\r\n\r\n// Слушаем клик на кнопке добавления карточки\r\n  \r\naddCardButton.addEventListener('click', function() {\r\n  clearValidation(addForm, validationOptions);\r\n  addForm.reset();\r\n  showPopup(editItemAdd);\r\n})"],"names":["apiConfig","baseUrl","headers","authorization","id","validationOptions","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","likeCard","likesNumber","evt","likeButton","target","nextElementSibling","textContent","classList","toggle","hidePopup","itemPopup","remove","document","removeEventListener","pushButtonListener","showPopup","popup","add","addEventListener","key","querySelector","clearValidation","formElement","formElements","getFormElements","list","forEach","inputElement","hideInputError","button","disabled","Array","from","querySelectorAll","errorElement","concat","handleResponse","res","ok","json","Promise","reject","status","config","editProfileButton","addCardButton","placesList","editItemPopup","editAvatarPopup","editItemAdd","deleteItemPopup","cardImagePopup","modifiedCardId","modifiedCardTargetButton","cardImage","cardCaption","profileTitle","profileDescr","profileImage","allPopups","addForm","forms","editForm","deleteForm","changeAvatarForm","nameInput","elements","name","descrInput","description","cardFunctions","delete","like","cardId","result","contains","checkLike","fetch","method","then","catch","handleError","data","likes","length","sendLike","cardName","closest","src","alt","innerText","err","console","log","renderCard","item","arguments","undefined","cardElement","card","cardFunc","placeElement","content","cloneNode","deleteCardButton","link","_id","checkExistLike","owner","createCard","changeSubmitButton","setTimeout","submitButton","all","getCards","_ref","_ref2","getProfileData","getCardsData","about","setAttribute","avatar","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","showInputError","validationMessage","isValid","inputList","buttonElement","some","hasInvalidInput","toggleButtonState","setEventListeners","enableValidation","preventDefault","namePr","descriptionPr","body","JSON","stringify","value","editProfile","finally","newCard","placeInput","urlInput","descr","sendCard","reset","deleteCard","deletePlace","editAvatar"],"sourceRoot":""}